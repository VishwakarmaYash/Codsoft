#include <iostream>
#include <vector>
#include <string>
using namespace std;

class Book {
public:
    int id;
    string title;
    string author;
    bool issued;

    Book(int i, string t, string a) : id(i), title(t), author(a), issued(false) {}
};

class Library {
private:
    vector<Book> books;

public:
    void addBook(int id, string title, string author) {
        books.emplace_back(id, title, author);
    }

    void displayBooks() {
        for (const auto &book : books) {
            cout << "ID: " << book.id << ", Title: " << book.title
                 << ", Author: " << book.author
                 << ", Issued: " << (book.issued ? "Yes" : "No") << endl;
        }
    }

    void issueBook(int id) {
        for (auto &book : books) {
            if (book.id == id) {
                if (!book.issued) {
                    book.issued = true;
                    cout << "Book issued successfully.\n";
                } else {
                    cout << "Book already issued.\n";
                }
                return;
            }
        }
        cout << "Book not found.\n";
    }

    void returnBook(int id) {
        for (auto &book : books) {
            if (book.id == id) {
                if (book.issued) {
                    book.issued = false;
                    cout << "Book returned successfully.\n";
                } else {
                    cout << "Book was not issued.\n";
                }
                return;
            }
        }
        cout << "Book not found.\n";
    }
};

int main() {
    Library library;
    int choice, id;
    string title, author;

    while (true) {
        cout << "\n1. Add Book\n2. Display Books\n3. Issue Book\n4. Return Book\n5. Exit\nEnter choice: ";
        cin >> choice;

        switch (choice) {
            case 1:
                cout << "Enter ID, Title, Author: ";
                cin >> id;
                cin.ignore();
                getline(cin, title);
                getline(cin, author);
                library.addBook(id, title, author);
                break;
            case 2:
                library.displayBooks();
                break;
            case 3:
                cout << "Enter Book ID to issue: ";
                cin >> id;
                library.issueBook(id);
                break;
            case 4:
                cout << "Enter Book ID to return: ";
                cin >> id;
                library.returnBook(id);
                break;
            case 5:
                return 0;
            default:
                cout << "Invalid choice.\n";
        }
    }
}